// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3668.TroBot.commands;
import org.usfirst.frc3668.TroBot.Robot;
import org.usfirst.frc3668.TroBot.RobotMath;
import org.usfirst.frc3668.TroBot.Settings;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class AutoIntake extends Command {
	boolean _isFinished =false;
	double _initTime;
	double _waitTime;
	double _direction;
	public AutoIntake (double waitTime, boolean invert) {
		requires(Robot.subIntake);
		_waitTime = waitTime;
		if(invert) {
			_direction = -1;
		}
		else {
			_direction = 1;
		}
	}
	public AutoIntake(double waitTime) {
		requires(Robot.subIntake);
		_waitTime = waitTime;
		_direction = 1;
    }

    @Override
    protected void initialize() {
    	_initTime = RobotMath.getTime();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	Robot.subIntake.intakeOut(Settings.intakeSpitOut * _direction);
    	if((RobotMath.getTime() - _initTime) > _waitTime) {
    		_isFinished = true;
    	}
    }
    

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return _isFinished;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Robot.subIntake.stopIntake();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	end();
    }
}
